spring.application.name=backend

# Configuration de la base de données PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/journal_sante
spring.datasource.username=journal_user
spring.datasource.password=journal_password
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configuration du serveur
server.port=8080

# Configuration CORS (pour permettre les requêtes depuis le frontend)
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Configuration Microsoft OAuth2 (Azure AD)
spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.scope=https://graph.microsoft.com/User.Read
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.microsoft.redirect-uri=http://localhost:8080/login/oauth2/code/microsoft

spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/v1.0/me
spring.security.oauth2.client.provider.microsoft.user-name-attribute=id

# Configuration JWT
app.jwt.secret=${JWT_SECRET:myVerySecureSecretKeyThatIsAtLeast256BitsLongForJWTSigning}
app.jwt.expiration-ms=86400000
app.oauth2.authorized-redirect-uris=http://localhost:3000/oauth2/redirect

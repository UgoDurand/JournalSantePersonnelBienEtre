version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: journal_postgres
    environment:
      POSTGRES_DB: journal_sante
      POSTGRES_USER: journal_user
      POSTGRES_PASSWORD: journal_password
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - journal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U journal_user -d journal_sante"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Spring Boot (Backend)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: journal_backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/journal_sante
      - SPRING_DATASOURCE_USERNAME=journal_user
      - SPRING_DATASOURCE_PASSWORD=journal_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - journal_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Application Vue.js (Frontend)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: journal_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VUE_APP_API_URL=http://localhost:8080
    networks:
      - journal_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  journal_network:
    driver: bridge
